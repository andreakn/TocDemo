@using RuleViewerPrototype.Utilities
@model RuleViewerPrototype.Models.RulesModel
@{
    ViewBag.Title = "Index";
}


<div class="clear" id="historySelectors">
   <span>Current as of: </span>
   <select id="currentAsOf">
      @foreach (var edition in Model.Editions)
      {
         <option value="@edition" @Model.SelectedIfLatestEdition(edition)>@edition</option>
      }
   </select>
   <input type="button" class="btn" id="collapseAll" value="Show only 'Document type' headings" />
</div>

<div>
   <div id="filters" class="space">
      <div id="filter1" class="filter">
         Industry:
         <select id="industryFilter">
            <option value=""> -- no filter -- </option>
            @foreach (var cat in Model.IndustryCategories)
            {
               <option value="@cat">@cat</option>
            }
         </select>
      </div> 
      <div id="filter2" class="filter">
         Service:
         <select id="serviceFilter">
            <option value=""> -- no filter -- </option>
            @foreach (var cat in Model.ServiceCategories)
            {
               <option value="@cat">@cat</option>
            }
         </select>
      </div>
      <div id="filter2" class="filter">
         <input type="text" placeholder="start typing to filter" id="freeTextFilter" />
      </div>
      <div class="filter">
         <span id="filterSpinner" style="display: none;">
            <img src="/Content/Images/spinner.GIF" alt="loading" />
            please wait ...
         </span>
      </div>
   </div>
   <div id="rules" class="space">
      <ul id="rulesTable">
         @foreach (var group in Model.RuleDocs.GroupBy(g=>g.HeadingName))
         {
            <li>
               <ul class="ruleGroup">
                  <li class="ruleGroupHeading">
                     <span class="buttonplace">
                        <img src="/Content/Images/plus.gif" class="expandGroup" alt="expand" />
                        <img src="/Content/Images/minus.gif" class="collapseGroup" alt="collapse" style="display: none;" />
                     </span>
                     <span class="topHeadingplace clickable">
                        <b>@group.Key</b>
                        <br/>
                        @group.Max(rd=>rd.Edition).MonthYear()
                     </span>
                     <span class="editionPlace spaceleft"></span>
                     <span class="statusPlace spaceleft"></span>
                     <span class="historyPlace spaceleft"></span>
                  </li>
                  <li class="ruleDocHeading ruleLayout groupHidden2"  >
                     <span class="namePlace weakBottom">&nbsp;</span>
                     <span class="docCodePlace weakBottom"><b>Document code</b></span>
                     <span class="editionPlace spaceleft weakBottom"><b>Edition</b></span>
                     <span class="amendedPlace spaceleft weakBottom"><b>Amended</b></span>
                     <span class="statusPlace spaceleft weakBottom">&nbsp;</span>
                     <span class="historyPlace spaceleft weakBottom"><b>History</b></span>
                  </li>
                  @foreach (var rule in group)
                  {
                     <li 
                        data-servicecategories='@string.Join(" ",rule.ServiceCategories)' 
                        data-industrycategories='@string.Join(" ",rule.IndustryCategories)' 
                         data-freetext="@rule.Name.ToLowerInvariant() @rule.DocumentCode.ToLowerInvariant()" class="ruleDoc ruleLayout groupHidden2">
                        <span class="namePlace weakBottom"><a href="/Content/Images/notready.png" download>@rule.Name</a></span>
                        <span class="docCodePlace weakBottom"><a href="/Content/Images/notready.png" download>@rule.DocumentCode</a></span>
                        <span class="editionPlace spaceleft weakBottom @rule.LatestEditionClass(group.Max(rd => rd.Edition))">@Html.Raw(rule.Edition.MonthYear())</span>
                        <span class="amendedPlace spaceleft weakBottom">@Html.Raw(rule.Amended.MonthYear())</span>
                        <span class="statusPlace spaceleft weakBottom @rule.LatestEditionClass(group.Max(rd => rd.Edition))">@rule.Status</span>
                        <span class="historyPlace spaceleft weakBottom">
                           <a href="/Content/Images/notready.png" download>
                              <img src="/Content/Images/plus.gif" class="floatUp" height="18" width="18" class="expandHistory" alt="see history" />
                           </a>
                        </span>
                     </li>
                  }
               </ul>
            </li>
         }
      </ul>
   </div>

</div>


@section scripts
{
   <script>
      window.industryTimeout = null;
      window.serviceTimeout = null;
      window.freeTextTimeout = null;
      $(document).ready(function() {

         $('.expandGroup').click(function() {
            var img = $(this);
            expandGroup(img);
         });
         $('.topHeadingplace').click(function () {

            $('.expandGroup', $(this).parent()).click();
         });

         $('.collapseGroup').click(function() {
            var img = $(this);
            collapseGroup(img);
         });

         $('#industryFilter').change(function() {
            $('#filterSpinner').show();
            var filter = $('#industryFilter').val();
            clearTimeout(window.industryTimeout);
            window.industryTimeout = setTimeout(function() {
               doindustryFilter(filter);
            }, 100);
         });

         $('#serviceFilter').change(function() {
            $('#filterSpinner').show();
            var filter = $('#serviceFilter').val();
            clearTimeout(window.serviceTimeout);
            window.serviceTimeout = setTimeout(function() {
               doserviceFilter(filter);
            }, 100);
         });

         $('#freeTextFilter').bind("propertychange change click keyup input paste", function() {
            $('#filterSpinner').show();
            var filter = $('#freeTextFilter').val();
            filter = filter.toLowerCase();
            clearTimeout(window.freeTextTimeout);
            window.freeTextTimeout = setTimeout(function() {
               doFreeTextFilter(filter);
            }, 500);
         });

         $('#collapseAll').click(function() {
            $('.collapseGroup').each(function() {
               var img = $(this);
               collapseGroup(img);
            });
         });

         $('#currentAsOf').change(function() {
            window.location.href = harvestUrl();
         });

         if ('@Model.InitialIndustryFilter' != '') {
            $('#industryFilter').val('@Model.InitialIndustryFilter');
            $('#industryFilter').change();
         }
         if ('@Model.InitialServiceFilter' != '') {
            $('#serviceFilter').val('@Model.InitialServiceFilter');
            $('#serviceFilter').change();
         }
         if ('@Model.InitialFreeTextFilter' != '') {
            $('#freeTextFilter').val('@Model.InitialServiceFilter');
            $('#freeTextFilter').change();
         }
      });


      function expandGroup(img) {
         var sibling = img.siblings('.collapseGroup');
         img.hide();
         sibling.show();
         var groupHeading = img.parents('ul.ruleGroup');
         groupHeading.addClass('opened');
         $('.ruleDoc, .ruleDocHeading', groupHeading).removeClass('groupHidden');
      }

      function collapseGroup(img) {
         var sibling = img.siblings('.expandGroup');
         img.hide();
         sibling.show();
         var groupHeading = img.parents('ul.ruleGroup');
         groupHeading.removeClass('opened');
         $('.ruleDoc, .ruleDocHeading', groupHeading).addClass('groupHidden');
      }

      function doFreeTextFilter(filter) {
         if (filter == '') {
            $('#rules li.ruleDoc').removeClass('freeTextFiltered');
         } else {
            $('#rules li.ruleDoc').addClass('freeTextFiltered');
            $('#rules li.ruleDoc[data-freetext*="' + filter + '"]').removeClass('freeTextFiltered');
         }
         $('#filterSpinner').hide();
      }

      function doserviceFilter(filter) {
         if (filter == '') {
            $('#rules li.ruleDoc').removeClass('serviceFiltered');
         } else {
            $('#rules li.ruleDoc').addClass('serviceFiltered');
            $('#rules li.ruleDoc[data-servicecategories *= "' + filter + '"]').removeClass('serviceFiltered');
         }
         $('#filterSpinner').hide();
      }

      function doindustryFilter(filter) {
         if (filter == '') {
            $('#rules li.ruleDoc').removeClass('industryFiltered');
         } else {
            $('#rules li.ruleDoc').addClass('industryFiltered');
            $('#rules li.ruleDoc[data-industrycategories *= "' + filter + '"]').removeClass('industryFiltered');
         }
         $('#filterSpinner').hide();
      }

      function harvestUrl() {
         var baseUrl = "/";
         var currentAsOf = $('#currentAsOf').val();
         var serviceFilter = $('#serviceFilter').val();
         var industryFilter = $('#industryFilter').val();
         var freeTextFilter = $('#freeTextFilter').val();
         var url = baseUrl;
         url = url + '?currentAsOf=' + currentAsOf;
         if (serviceFilter != '') {
            url = url + '&serviceFilter=' + serviceFilter;
         }
         if (industryFilter != '') {
            url = url + '&industryFilter=' + industryFilter;
         }
         if (freeTextFilter != '') {
            url = url + '&freeTextFilter=' + freeTextFilter;
         }
         return url;
      }

   </script>

   
}

